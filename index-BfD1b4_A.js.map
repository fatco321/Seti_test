{"version":3,"file":"index-BfD1b4_A.js","sources":["../src/components/UI/Tooltip.vue","../src/components/UI/ButtonMenu.vue","../src/store/indexedDB.js","../src/store/store.js","../src/components/Pages/MenuPage.vue","../src/components/UI/Answer.vue","../src/components/UI/Button.vue","../src/components/UI/ProgressBar.vue","../src/components/Pages/ExamPage.vue","../src/components/Pages/MarathonPage.vue","../src/components/Pages/StatisticPage.vue","../src/components/UI/ButtonHit.vue","../src/components/Pages/MistakePage.vue","../src/components/UI/ThemeCard.vue","../src/components/Pages/ThemePage.vue","../src/components/Pages/ThemeTraining.vue","../src/router/router.js","../src/main.js"],"sourcesContent":["<template>\r\n\t<div class=\"tooltip-container\">\r\n\t\t<!-- Trigger Element -->\r\n\t\t<div\r\n\t\t\tclass=\"tooltip-trigger\"\r\n\t\t\t@mouseenter=\"showTooltip\"\r\n\t\t\t@mouseleave=\"hideTooltip\"\r\n\t\t>\r\n\t\t\t<slot name=\"trigger\"></slot>\r\n\t\t</div>\r\n\r\n\t\t<!-- Tooltip Element -->\r\n\t\t<div v-if=\"isVisible\" class=\"tooltip\" :style=\"tooltipStyle\">\r\n\t\t\t<div class=\"tooltip-arrow\" :class=\"`arrow-${props.position}`\"></div>\r\n\t\t\t<slot name=\"content\"></slot>\r\n\t\t</div>\r\n\t</div>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref } from 'vue'\r\n\r\nconst props = defineProps({\r\n\tposition: {\r\n\t\ttype: String,\r\n\t\tdefault: 'bottom', // Possible values: top, bottom, left, right\r\n\t\tvalidator: value => ['top', 'bottom', 'left', 'right'].includes(value),\r\n\t},\r\n\toffset: {\r\n\t\ttype: Number,\r\n\t\tdefault: 8, // Distance between tooltip and trigger element\r\n\t},\r\n})\r\n\r\nconst isVisible = ref(false)\r\nconst tooltipStyle = ref({})\r\n\r\nconst showTooltip = event => {\r\n\tisVisible.value = true\r\n\tconst triggerRect = event.target.getBoundingClientRect()\r\n\r\n\t// Calculate tooltip position based on props.position\r\n\tconst styles = { position: 'fixed' } // Use fixed positioning to avoid flexbox issues\r\n\r\n\tswitch (props.position) {\r\n\t\tcase 'top':\r\n\t\t\tstyles.top = `${triggerRect.top - props.offset}px`\r\n\t\t\tstyles.left = `${triggerRect.left + triggerRect.width / 2}px`\r\n\t\t\tstyles.transform = 'translate(-50%, -100%)'\r\n\t\t\tbreak\r\n\t\tcase 'bottom':\r\n\t\t\tstyles.top = `${triggerRect.bottom + props.offset}px`\r\n\t\t\tstyles.left = `${triggerRect.left + triggerRect.width / 2}px`\r\n\t\t\tstyles.transform = 'translate(-50%, 0)'\r\n\t\t\tbreak\r\n\t\tcase 'left':\r\n\t\t\tstyles.top = `${triggerRect.top + triggerRect.height / 2}px`\r\n\t\t\tstyles.left = `${triggerRect.left - props.offset}px`\r\n\t\t\tstyles.transform = 'translate(-100%, -50%)'\r\n\t\t\tbreak\r\n\t\tcase 'right':\r\n\t\t\tstyles.top = `${triggerRect.top + triggerRect.height / 2}px`\r\n\t\t\tstyles.left = `${triggerRect.right + props.offset}px`\r\n\t\t\tstyles.transform = 'translate(0, -50%)'\r\n\t\t\tbreak\r\n\t}\r\n\r\n\ttooltipStyle.value = styles\r\n}\r\n\r\nconst hideTooltip = () => {\r\n\tisVisible.value = false\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.tooltip-container {\r\n\tposition: relative;\r\n}\r\n\r\n.tooltip-trigger {\r\n\tdisplay: inline-block;\r\n}\r\n\r\n.tooltip {\r\n\tposition: fixed;\r\n\t/* background-color: #333;*/\r\n\tbackground-color: #333;\r\n\tcolor: #fff;\r\n\tpadding: 8px;\r\n\tborder-radius: 4px;\r\n\tfont-size: 0.8em;\r\n\tz-index: 1000;\r\n\twhite-space: nowrap;\r\n\tbox-shadow: 0 2px 4px rgba(0, 0, 0, 0.2);\r\n\tpointer-events: none; /* Prevents tooltip from blocking mouse events */\r\n}\r\n\r\n.tooltip-arrow {\r\n\tposition: absolute;\r\n\twidth: 0;\r\n\theight: 0;\r\n\tborder-style: solid;\r\n}\r\n\r\n.arrow-top {\r\n\tbottom: -0.6vw; /* Adjust arrow position relative to tooltip */\r\n\tleft: 50%;\r\n\tborder-width: 5px 5px 0 5px;\r\n\tborder-color: #333 transparent transparent transparent;\r\n\ttransform: translateX(-50%);\r\n}\r\n\r\n.arrow-bottom {\r\n\ttop: -0.6vw; /* Adjust arrow position relative to tooltip */\r\n\tleft: 50%;\r\n\tborder-width: 0 0.7vw 0.7vw 0.7vw;\r\n\tborder-color: transparent transparent #333 transparent;\r\n\ttransform: translateX(-50%);\r\n}\r\n\r\n.arrow-left {\r\n\ttop: 50%;\r\n\tright: -0.6vw; /* Adjust arrow position relative to tooltip */\r\n\tborder-width: 5px 0 5px 5px;\r\n\tborder-color: transparent transparent transparent #333;\r\n\ttransform: translateY(-50%);\r\n}\r\n\r\n.arrow-right {\r\n\ttop: 50%;\r\n\tleft: -0.6vw; /* Adjust arrow position relative to tooltip */\r\n\tborder-width: 5px 5px 5px 0;\r\n\tborder-color: transparent #333 transparent transparent;\r\n\ttransform: translateY(-50%);\r\n}\r\n</style>\r\n","<script setup>\r\nconst props = defineProps({\r\n\tfontSize: {\r\n\t\ttype: String,\r\n\t\tdefault: '1em', // Значение по умолчанию\r\n\t},\r\n\tdisabled: {\r\n\t\ttype: Boolean,\r\n\t\tdefault: false,\r\n\t},\r\n\twidth: {\r\n\t\ttype: String,\r\n\t\tdefault: '45vw', // Значение по умолчанию\r\n\t},\r\n})\r\n</script>\r\n\r\n<template>\r\n\t<button\r\n\t\t:style=\"{\r\n\t\t\tfontSize: props.fontSize,\r\n\t\t\twidth: props.width,\r\n\t\t}\"\r\n\t>\r\n\t\t<slot></slot>\r\n\t</button>\r\n</template>\r\n\r\n<style scoped>\r\nbutton {\r\n\tpadding: 1vw 4vw;\r\n\tfont-weight: 500;\r\n\tbackground-color: #234781;\r\n\tcolor: #fafafa;\r\n\tborder: none;\r\n\tcursor: pointer;\r\n\ttransition: background-color 0.5s;\r\n}\r\n\r\nbutton:hover {\r\n\tbackground-color: #4f6c9a;\r\n}\r\n</style>\r\n","// indexedDB.js\r\nexport class IndexedDB {\r\n\tconstructor(dbName, storeName) {\r\n\t\tthis.dbName = dbName\r\n\t\tthis.storeName = storeName\r\n\t\tthis.db = null\r\n\t}\r\n\r\n\t// Открытие базы данных\r\n\tasync open() {\r\n\t\treturn new Promise((resolve, reject) => {\r\n\t\t\tconst request = indexedDB.open(this.dbName, 1)\r\n\r\n\t\t\trequest.onupgradeneeded = event => {\r\n\t\t\t\tconst db = event.target.result\r\n\t\t\t\tif (!db.objectStoreNames.contains(this.storeName)) {\r\n\t\t\t\t\tdb.createObjectStore(this.storeName, { keyPath: 'id' })\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\trequest.onsuccess = event => {\r\n\t\t\t\tthis.db = event.target.result\r\n\t\t\t\tresolve(this.db)\r\n\t\t\t}\r\n\r\n\t\t\trequest.onerror = event => {\r\n\t\t\t\treject(event.target.error)\r\n\t\t\t}\r\n\t\t})\r\n\t}\r\n\r\n\t// Получение всех данных из хранилища\r\n\tasync getAll() {\r\n\t\treturn new Promise((resolve, reject) => {\r\n\t\t\tconst transaction = this.db.transaction(this.storeName, 'readonly')\r\n\t\t\tconst store = transaction.objectStore(this.storeName)\r\n\t\t\tconst request = store.getAll()\r\n\r\n\t\t\trequest.onsuccess = () => resolve(request.result)\r\n\t\t\trequest.onerror = () => reject(request.error)\r\n\t\t})\r\n\t}\r\n\r\n\t// Получение объекта по id\r\n\tasync getById(id) {\r\n\t\treturn new Promise((resolve, reject) => {\r\n\t\t\tconst transaction = this.db.transaction(this.storeName, 'readonly')\r\n\t\t\tconst store = transaction.objectStore(this.storeName)\r\n\t\t\tconst request = store.get(id)\r\n\r\n\t\t\trequest.onsuccess = () => resolve(request.result)\r\n\t\t\trequest.onerror = () => reject(request.error)\r\n\t\t})\r\n\t}\r\n\r\n\t// Сохранение данных в хранилище\r\n\tasync save(data) {\r\n\t\treturn new Promise((resolve, reject) => {\r\n\t\t\tconst transaction = this.db.transaction(this.storeName, 'readwrite')\r\n\t\t\tconst store = transaction.objectStore(this.storeName)\r\n\r\n\t\t\tdata.forEach(item => {\r\n\t\t\t\tstore.put(item)\r\n\t\t\t})\r\n\r\n\t\t\ttransaction.oncomplete = () => resolve()\r\n\t\t\ttransaction.onerror = () => reject(transaction.error)\r\n\t\t})\r\n\t}\r\n\r\n\t// Удаление данных из хранилища\r\n\tasync delete(ids) {\r\n\t\tconst transaction = this.db.transaction(this.storeName, 'readwrite')\r\n\t\tconst store = transaction.objectStore(this.storeName)\r\n\t\tids.forEach(id => store.delete(id))\r\n\t\tawait transaction.complete\r\n\t}\r\n\r\n\tasync clear() {\r\n\t\treturn new Promise((resolve, reject) => {\r\n\t\t\tconst transaction = this.db.transaction(this.storeName, 'readwrite')\r\n\t\t\tconst store = transaction.objectStore(this.storeName)\r\n\t\t\tconst request = store.clear()\r\n\r\n\t\t\trequest.onsuccess = () => resolve()\r\n\t\t\trequest.onerror = () => reject(request.error)\r\n\t\t})\r\n\t}\r\n}\r\n","import { reactive, watch } from 'vue'\r\nimport { IndexedDB } from './indexedDB.js'\r\n\r\n// Функция для исключения полей isCorrect и userAlreadyAnswer\r\nfunction excludeFields(item) {\r\n\tconst { isCorrect, userAlreadyAnswer, ...rest } = item\r\n\treturn rest\r\n}\r\n\r\nconst db = new IndexedDB('QuizDB', 'questions')\r\n\r\n// Функция для работы с localStorage\r\nfunction getFromLocalStorage(key, defaultValue) {\r\n\tconst value = localStorage.getItem(key)\r\n\treturn value !== null ? JSON.parse(value) : defaultValue\r\n}\r\n\r\nfunction setToLocalStorage(key, value) {\r\n\tlocalStorage.setItem(key, JSON.stringify(value))\r\n}\r\n\r\nexport const store = reactive({\r\n\tdata: [],\r\n\t_isHightVoltage: getFromLocalStorage('isHightVoltage', false),\r\n\t// Геттер и сеттер для isHightVoltage\r\n\tget isHightVoltage() {\r\n\t\treturn this._isHightVoltage\r\n\t},\r\n\tset isHightVoltage(value) {\r\n\t\tthis._isHightVoltage = value\r\n\t\tsetToLocalStorage('isHightVoltage', value) // Сохраняем в localStorage\r\n\t},\r\n\tasync loadData() {\r\n\t\tconst startTime = Date.now()\r\n\t\ttry {\r\n\t\t\t// Открываем базу данных\r\n\t\t\tawait db.open()\r\n\r\n\t\t\t// Загружаем данные из data.json\r\n\t\t\tconst response = await fetch('./data.json')\r\n\t\t\tif (!response.ok) {\r\n\t\t\t\tthrow new Error('Network response was not ok')\r\n\t\t\t}\r\n\t\t\tconst jsonData = await response.json()\r\n\t\t\tlet newData = jsonData.data\r\n\r\n\t\t\t// Фильтруем данные в зависимости от isHightVoltage\r\n\t\t\tif (!this.isHightVoltage) {\r\n\t\t\t\t// Если isHightVoltage === false, удаляем вопросы с voltage\r\n\t\t\t\tconst existingData = await db.getAll()\r\n\t\t\t\tconst itemsToRemove = existingData.filter(item => item.voltage)\r\n\t\t\t\tif (itemsToRemove.length > 0) {\r\n\t\t\t\t\tawait db.delete(itemsToRemove.map(item => item.id))\r\n\t\t\t\t\tconsole.log('Removed items with voltage:', itemsToRemove)\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Оставляем только вопросы без voltage\r\n\t\t\t\tnewData = newData.filter(item => !item.voltage)\r\n\t\t\t} else {\r\n\t\t\t\t// Если isHightVoltage === true, добавляем вопросы с voltage\r\n\t\t\t\tconst existingData = await db.getAll()\r\n\t\t\t\tconst itemsToAdd = newData.filter(\r\n\t\t\t\t\titem =>\r\n\t\t\t\t\t\titem.voltage &&\r\n\t\t\t\t\t\t!existingData.some(existingItem => existingItem.id === item.id)\r\n\t\t\t\t)\r\n\t\t\t\tif (itemsToAdd.length > 0) {\r\n\t\t\t\t\t// Добавляем поля isCorrect и userAlreadyAnswer\r\n\t\t\t\t\tconst enrichedItems = itemsToAdd.map(item => ({\r\n\t\t\t\t\t\t...item,\r\n\t\t\t\t\t\tisCorrect: false,\r\n\t\t\t\t\t\tuserAlreadyAnswer: false,\r\n\t\t\t\t\t}))\r\n\t\t\t\t\tawait db.save(enrichedItems)\r\n\t\t\t\t\tconsole.log('Added items with voltage:', enrichedItems)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// Добавляем поля isCorrect и userAlreadyAnswer для новых данных\r\n\t\t\tconst enrichedData = newData.map(item => ({\r\n\t\t\t\t...item,\r\n\t\t\t\tisCorrect: false,\r\n\t\t\t\tuserAlreadyAnswer: false,\r\n\t\t\t}))\r\n\r\n\t\t\t// Получаем текущие данные из IndexedDB\r\n\t\t\tconst existingData = await db.getAll()\r\n\r\n\t\t\t// Сравниваем данные без учета isCorrect и userAlreadyAnswer\r\n\t\t\tconst updates = []\r\n\t\t\tenrichedData.forEach(newItem => {\r\n\t\t\t\tconst existingItem = existingData.find(item => item.id === newItem.id)\r\n\r\n\t\t\t\t// Сравниваем объекты без полей isCorrect и userAlreadyAnswer\r\n\t\t\t\tif (\r\n\t\t\t\t\t!existingItem ||\r\n\t\t\t\t\tJSON.stringify(excludeFields(existingItem)) !==\r\n\t\t\t\t\t\tJSON.stringify(excludeFields(newItem))\r\n\t\t\t\t) {\r\n\t\t\t\t\tupdates.push(newItem)\r\n\t\t\t\t}\r\n\t\t\t})\r\n\r\n\t\t\t// Сохраняем обновленные данные в IndexedDB\r\n\t\t\tif (updates.length > 0) {\r\n\t\t\t\tawait db.save(updates)\r\n\t\t\t\tconsole.log('Updated items:', updates)\r\n\t\t\t}\r\n\r\n\t\t\t// Обновляем данные в хранилище\r\n\t\t\tthis.data = await db.getAll()\r\n\t\t} catch (error) {\r\n\t\t\tconsole.error('Failed to load or update data:', error)\r\n\t\t}\r\n\t\tconst endTime = Date.now()\r\n\t\tconst executionTime = endTime - startTime\r\n\t\tconsole.log(`loadData failed after ${executionTime} ms`)\r\n\t},\r\n\r\n\t// Метод для получения вопроса по id\r\n\tasync getQuestionById(id) {\r\n\t\ttry {\r\n\t\t\tawait db.open()\r\n\t\t\tconst question = await db.getById(id)\r\n\t\t\treturn question\r\n\t\t} catch (error) {\r\n\t\t\tconsole.error('Failed to get question by id:', error)\r\n\t\t\treturn null\r\n\t\t}\r\n\t},\r\n\r\n\t// Метод для обновления вопроса\r\n\tasync updateQuestion(id, updates) {\r\n\t\ttry {\r\n\t\t\tawait db.open()\r\n\t\t\tconst question = await db.getById(id)\r\n\t\t\tif (question) {\r\n\t\t\t\t// Преобразуем реактивный объект в простой\r\n\t\t\t\tconst rawUpdates = JSON.parse(JSON.stringify(updates))\r\n\t\t\t\tconst rawQuestion = JSON.parse(JSON.stringify(question))\r\n\t\t\t\tconst updatedQuestion = { ...rawQuestion, ...rawUpdates }\r\n\r\n\t\t\t\t// Сохраняем обновленный вопрос\r\n\t\t\t\tawait db.save([updatedQuestion])\r\n\t\t\t} else {\r\n\t\t\t\tconsole.error('Question not found')\r\n\t\t\t}\r\n\t\t} catch (error) {\r\n\t\t\tconsole.error('Failed to update question:', error)\r\n\t\t}\r\n\t},\r\n\tasync reloadAndReplaceData() {\r\n\t\ttry {\r\n\t\t\tawait db.open()\r\n\r\n\t\t\t// Запрос новых данных\r\n\t\t\tconst response = await fetch('./data.json')\r\n\t\t\tif (!response.ok) {\r\n\t\t\t\tthrow new Error('Network response was not ok')\r\n\t\t\t}\r\n\t\t\tconst jsonData = await response.json()\r\n\t\t\tlet newData = jsonData.data\r\n\r\n\t\t\t// Учитываем значение isHightVoltage\r\n\t\t\tif (!this.isHightVoltage) {\r\n\t\t\t\tnewData = newData.filter(item => !item.voltage)\r\n\t\t\t}\r\n\r\n\t\t\t// Добавляем необходимые поля\r\n\t\t\tconst enrichedData = newData.map(item => ({\r\n\t\t\t\t...item,\r\n\t\t\t\tisCorrect: false,\r\n\t\t\t\tuserAlreadyAnswer: false,\r\n\t\t\t}))\r\n\r\n\t\t\t// Полностью перезаписываем базу\r\n\t\t\tawait db.clear()\r\n\t\t\tawait db.save(enrichedData)\r\n\r\n\t\t\t// Обновляем данные в хранилище\r\n\t\t\tthis.data = enrichedData\r\n\t\t\tconsole.log('Данные успешно перезаписаны.')\r\n\t\t} catch (error) {\r\n\t\t\tconsole.error('Ошибка при перезаписи данных:', error)\r\n\t\t}\r\n\t},\r\n})\r\n\r\n// Отслеживаем изменения isHightVoltage\r\nwatch(\r\n\t() => store.isHightVoltage,\r\n\tasync newValue => {\r\n\t\t//\tconsole.log(`isHightVoltage changed to: ${newValue}`)\r\n\t\tawait store.loadData() // Перезагружаем данные при изменении isHightVoltage\r\n\t},\r\n\t{ immediate: true } // Выполняем сразу при монтировании\r\n)\r\n","<script setup>\r\nimport Tooltip from '../UI/Tooltip.vue'\r\nimport Button from '../UI/ButtonMenu.vue'\r\nimport ToggleSwitch from '../UI/ToggleSwitch.vue'\r\nimport { ref, onBeforeMount } from 'vue'\r\n\r\nimport { store } from '../../store/store.js'\r\nimport { RouterLink } from 'vue-router'\r\n\r\n// Добавляем реактивное свойство для отслеживания состояния загрузки\r\nconst isLoading = ref(true)\r\n\r\nonBeforeMount(async () => {\r\n\ttry {\r\n\t\tawait store.loadData() // Ожидаем завершения загрузки данных\r\n\t\tisLoading.value = false // Скрываем загрузочный экран\r\n\t} catch (error) {\r\n\t\tconsole.error('Ошибка при загрузке данных:', error)\r\n\t\tisLoading.value = false // На случай ошибки скрываем загрузочный экран\r\n\t}\r\n})\r\n</script>\r\n\r\n<template>\r\n\t<div v-if=\"isLoading\" class=\"loading-screen\">\r\n\t\t<div class=\"spinner\"></div>\r\n\t\t<p>Загрузка данных...</p>\r\n\t</div>\r\n\t<div v-else class=\"container\">\r\n\t\t<Tooltip position=\"bottom\">\r\n\t\t\t<template #trigger>\r\n\t\t\t\t<RouterLink to=\"/exam/\">\r\n\t\t\t\t\t<Button> ЭКЗАМЕН </Button>\r\n\t\t\t\t</RouterLink>\r\n\t\t\t</template>\r\n\t\t\t<template #content> Сдайте экзамен из десяти вопросов</template>\r\n\t\t</Tooltip>\r\n\t\t<Tooltip position=\"bottom\">\r\n\t\t\t<template #trigger>\r\n\t\t\t\t<RouterLink to=\"theme\"><Button>ТРЕНИРОВКА ПО ТЕМАМ</Button></RouterLink>\r\n\t\t\t</template>\r\n\t\t\t<template #content> Выбирайте темы для тренировки из списка</template>\r\n\t\t</Tooltip>\r\n\t\t<Tooltip position=\"top\">\r\n\t\t\t<template #trigger>\r\n\t\t\t\t<RouterLink to=\"/marathon\"><Button> МАРАФОН </Button></RouterLink>\r\n\t\t\t</template>\r\n\t\t\t<template #content> Отвечайте на вопросы до первой ошибки</template>\r\n\t\t</Tooltip>\r\n\t\t<Tooltip position=\"top\">\r\n\t\t\t<template #trigger>\r\n\t\t\t\t<RouterLink to=\"/mistake\">\r\n\t\t\t\t\t<Button>РАБОТА НАД ОШИБКАМИ</Button>\r\n\t\t\t\t</RouterLink>\r\n\t\t\t</template>\r\n\t\t\t<template #content>Выполняйте работу над ошибками</template>\r\n\t\t</Tooltip>\r\n\t\t<Tooltip position=\"top\">\r\n\t\t\t<template #trigger>\r\n\t\t\t\t<RouterLink to=\"/statistic\">\r\n\t\t\t\t\t<Button>СТАТИСТИКА</Button>\r\n\t\t\t\t</RouterLink>\r\n\t\t\t</template>\r\n\t\t\t<template #content>\r\n\t\t\t\tСмотрите собственную статистику ответов на вопросы</template\r\n\t\t\t>\r\n\t\t</Tooltip>\r\n\t\t<div class=\"voltage\">\r\n\t\t\t<div :class=\"{ scale: !store.isHightVoltage }\" class=\"voltage-text\">\r\n\t\t\t\tДо 1000В\r\n\t\t\t</div>\r\n\t\t\t<div>\r\n\t\t\t\t<ToggleSwitch v-model=\"store.isHightVoltage\"></ToggleSwitch>\r\n\t\t\t</div>\r\n\t\t\t<div :class=\"{ scale: store.isHightVoltage }\" class=\"voltage-text\">\r\n\t\t\t\tСвыше 1000В\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t</div>\r\n</template>\r\n\r\n<style scoped>\r\n.loading-screen {\r\n\tposition: fixed;\r\n\ttop: 0;\r\n\tleft: 0;\r\n\twidth: 100%;\r\n\theight: 100%;\r\n\tbackground-color: rgba(0, 0, 0, 0.8);\r\n\tdisplay: flex;\r\n\tflex-direction: column;\r\n\talign-items: center;\r\n\tjustify-content: center;\r\n\tcolor: white;\r\n\tz-index: 1000;\r\n}\r\n\r\n.spinner {\r\n\twidth: 50px;\r\n\theight: 50px;\r\n\tborder: 5px solid rgba(255, 255, 255, 0.3);\r\n\tborder-top: 5px solid white;\r\n\tborder-radius: 50%;\r\n\tanimation: spin 1s linear infinite;\r\n}\r\n\r\n@keyframes spin {\r\n\tfrom {\r\n\t\ttransform: rotate(0deg);\r\n\t}\r\n\tto {\r\n\t\ttransform: rotate(360deg);\r\n\t}\r\n}\r\n\r\n.container {\r\n\tpadding: 4vw 0;\r\n\tdisplay: flex;\r\n\tflex-flow: column;\r\n\talign-items: center;\r\n\tgap: 5vw;\r\n\tjustify-content: center;\r\n\tbackground-image: url('@/assets/img/img_2.png');\r\n\tbackground-size: cover;\r\n}\r\n\r\n.voltage {\r\n\tdisplay: flex;\r\n\tcolor: #fafafa;\r\n\tgap: 2vw;\r\n\talign-items: center;\r\n\tbackground-color: #2195f31b;\r\n\tborder-radius: 8px;\r\n\tbox-shadow: 0 2px 4px rgba(0, 0, 0, 0.3);\r\n\tpadding: 1vw 3vw;\r\n\tborder-radius: 3vw;\r\n}\r\n\r\n.voltage-text {\r\n\ttext-align: center;\r\n\tfont-weight: 900;\r\n\ttransition: scale 0.5s, color 1s;\r\n\tcolor: black;\r\n}\r\n\r\n.scale {\r\n\tscale: 1.1;\r\n\tcolor: #43eb9f;\r\n}\r\n</style>\r\n","<script setup>\r\nimport { ref, watch } from 'vue'\r\n\r\n//const props = defineProps(['answerArr', 'isRadio', 'isConfirm'])\r\nconst props = defineProps({\r\n\tanswerArr: {\r\n\t\ttype: Array,\r\n\t\trequired: true,\r\n\t},\r\n\tisRadio: {\r\n\t\ttype: Boolean,\r\n\t\trequired: true,\r\n\t},\r\n\tisConfirm: {\r\n\t\ttype: Boolean,\r\n\t\trequired: false,\r\n\t},\r\n})\r\nconst emit = defineEmits(['userSelect'])\r\nconst isDisable = ref(false)\r\n\r\n// Реактивное состояние для хранения выбранных значений\r\nconst selectedValue = ref(null) // Для радио-кнопок\r\nconst selectedValues = ref([]) // Для чекбоксов\r\n\r\n// Сброс состояния при изменении answerArr\r\nwatch(\r\n\t() => props.answerArr,\r\n\t() => {\r\n\t\tselectedValue.value = null // Сброс для радио-кнопок\r\n\t\tselectedValues.value = [] // Сброс для чекбоксов\r\n\t\tisDisable.value = false\r\n\t}\r\n)\r\n\r\nwatch(\r\n\t() => props.isConfirm, // Геттер-функция, возвращающая значение пропса\r\n\tnewVal => {\r\n\t\tif (newVal === false) return // Если isConfirm false, ничего не делаем\r\n\t\tisDisable.value = true\r\n\t\tif (selectedValue.value !== null) emit('userSelect', selectedValue.value)\r\n\t\tif (selectedValues.value.length > 0)\r\n\t\t\temit('userSelect', selectedValues.value)\r\n\t}\r\n)\r\n\r\n// Обработчик изменения для радио-кнопок\r\nconst handleRadioChange = value => {\r\n\tselectedValue.value = value\r\n}\r\n\r\n// Обработчик изменения для чекбоксов\r\nconst handleCheckboxChange = value => {\r\n\tif (selectedValues.value.includes(value)) {\r\n\t\t// Удаляем значение, если оно уже выбрано\r\n\t\tselectedValues.value = selectedValues.value.filter(item => item !== value)\r\n\t} else {\r\n\t\t// Добавляем значение, если оно не выбрано\r\n\t\tselectedValues.value.push(value)\r\n\t}\r\n}\r\n</script>\r\n\r\n<template>\r\n\t<div class=\"container\">\r\n\t\t<div v-if=\"isRadio\">\r\n\t\t\t<label v-for=\"item in answerArr\" :key=\"item\" class=\"form-control\">\r\n\t\t\t\t<input\r\n\t\t\t\t\ttype=\"radio\"\r\n\t\t\t\t\tname=\"radio\"\r\n\t\t\t\t\t:value=\"item\"\r\n\t\t\t\t\t:checked=\"selectedValue === item\"\r\n\t\t\t\t\t:disabled=\"isDisable\"\r\n\t\t\t\t\t@change=\"handleRadioChange(item)\"\r\n\t\t\t\t/>\r\n\t\t\t\t<span style=\"white-space: pre-line\">{{ item }}</span>\r\n\t\t\t</label>\r\n\t\t</div>\r\n\t\t<div v-else>\r\n\t\t\t<label v-for=\"item in answerArr\" :key=\"item\" class=\"form-control\">\r\n\t\t\t\t<input\r\n\t\t\t\t\ttype=\"checkbox\"\r\n\t\t\t\t\tname=\"checkbox\"\r\n\t\t\t\t\t:value=\"item\"\r\n\t\t\t\t\t:checked=\"selectedValues.includes(item)\"\r\n\t\t\t\t\t:disabled=\"isDisable\"\r\n\t\t\t\t\t@change=\"handleCheckboxChange(item)\"\r\n\t\t\t\t/>\r\n\t\t\t\t<span style=\"white-space: pre-line\">{{ item }}</span>\r\n\t\t\t</label>\r\n\t\t</div>\r\n\t</div>\r\n</template>\r\n\r\n<style scoped>\r\n.form-control {\r\n\tmargin: 1vw 0;\r\n\tdisplay: grid;\r\n\tgrid-template-columns: 1em auto;\r\n\tgap: 0.5em;\r\n\talign-items: center;\r\n}\r\n\r\nlabel {\r\n\tcursor: pointer;\r\n}\r\n\r\ninput[type='radio'],\r\ninput[type='checkbox'] {\r\n\t-webkit-appearance: none;\r\n\tappearance: none;\r\n\tmargin: 0;\r\n\tfont: inherit;\r\n\tcolor: black;\r\n\twidth: 2.8vw;\r\n\theight: 2.8vw;\r\n\tborder: 0.4vw solid black;\r\n\tborder-radius: 50%;\r\n\ttransform: translateY(-0.075em);\r\n\tcursor: pointer;\r\n\tdisplay: grid;\r\n\tplace-content: center;\r\n}\r\n\r\ninput[type='checkbox'] {\r\n\tborder-radius: 0.15em;\r\n}\r\n\r\ninput[type='radio']::before,\r\ninput[type='checkbox']::before {\r\n\tcontent: '';\r\n\twidth: 1.6vw;\r\n\theight: 1.6vw;\r\n\ttransform: scale(0);\r\n\ttransition: 120ms transform ease-in-out;\r\n\tbackground-color: #234781;\r\n}\r\n\r\ninput[type='radio']::before {\r\n\tborder-radius: 50%;\r\n}\r\n\r\ninput[type='checkbox']::before {\r\n\tclip-path: polygon(14% 44%, 0 65%, 50% 100%, 100% 16%, 80% 0%, 43% 62%);\r\n}\r\n\r\ninput[type='radio']:checked::before,\r\ninput[type='checkbox']:checked::before {\r\n\ttransform: scale(1);\r\n}\r\n\r\ninput:not(:checked):not(:disabled) {\r\n\topacity: 1;\r\n}\r\n\r\ninput:not(:checked):disabled {\r\n\topacity: 0.5;\r\n}\r\n\r\ninput:checked:not(:disabled) {\r\n\topacity: 1;\r\n}\r\n\r\ninput:checked:disabled {\r\n\topacity: 1;\r\n\tfont-weight: bold;\r\n}\r\n\r\nlabel:has(input:disabled) {\r\n\topacity: 0.5;\r\n}\r\n\r\n/* Стили для label, когда input выбран (checked) */\r\nlabel:has(input:checked:disabled) {\r\n\tfont-weight: bold;\r\n\topacity: 1;\r\n}\r\ninput:has(input:checked:disabled) {\r\n\topacity: 1;\r\n}\r\n</style>\r\n","<script setup>\r\nimport { ref } from 'vue'\r\n\r\nconst props = defineProps({\r\n\tbackgroundColor: {\r\n\t\ttype: String,\r\n\t\tdefault: '#42b983', // Значение по умолчанию\r\n\t},\r\n\tfontSize: {\r\n\t\ttype: String,\r\n\t\tdefault: '1em', // Значение по умолчанию\r\n\t},\r\n\thoverBackgroundColor: {\r\n\t\ttype: String,\r\n\t\tdefault: '#369f6e', // Значение по умолчанию\r\n\t},\r\n\tdisabled: {\r\n\t\ttype: Boolean,\r\n\t\tdefault: false,\r\n\t},\r\n})\r\n\r\nconst isHovered = ref(false)\r\n\r\nconst handleMouseEnter = () => {\r\n\tif (!props.disabled) {\r\n\t\tisHovered.value = true\r\n\t}\r\n}\r\n\r\nconst handleMouseLeave = () => {\r\n\tif (!props.disabled) {\r\n\t\tisHovered.value = false\r\n\t}\r\n}\r\n</script>\r\n\r\n<template>\r\n\t<button\r\n\t\t:style=\"{\r\n\t\t\tbackgroundColor: isHovered\r\n\t\t\t\t? props.hoverBackgroundColor\r\n\t\t\t\t: props.backgroundColor,\r\n\t\t\tfontSize: props.fontSize,\r\n\t\t}\"\r\n\t\t@mouseenter=\"handleMouseEnter\"\r\n\t\t@mouseleave=\"handleMouseLeave\"\r\n\t\t:disabled=\"props.disabled\"\r\n\t>\r\n\t\t<slot></slot>\r\n\t</button>\r\n</template>\r\n\r\n<style scoped>\r\nbutton {\r\n\tpadding: 1vw 3vw;\r\n\tcolor: white;\r\n\tborder: none;\r\n\tborder-radius: 1vw;\r\n\tcursor: pointer;\r\n\ttransition: background-color 0.3s ease;\r\n}\r\n\r\nbutton:disabled {\r\n\tbackground-color: #ccc;\r\n\tcursor: not-allowed;\r\n}\r\n</style>\r\n","<script setup>\r\nimport { computed } from 'vue'\r\n\r\nconst props = defineProps({\r\n\tindex: {\r\n\t\ttype: Number,\r\n\t\trequired: true,\r\n\t},\r\n\ttotal: {\r\n\t\ttype: Number,\r\n\t\trequired: true,\r\n\t},\r\n\tisShowTotal: {\r\n\t\ttype: Boolean,\r\n\t\tdefault: false,\r\n\t},\r\n})\r\n\r\nconst progressWidth = computed(() => {\r\n\treturn `${((props.index + 1) / props.total) * 100}%`\r\n})\r\n</script>\r\n\r\n<template>\r\n\t<div class=\"progress-bar\">\r\n\t\t<div class=\"progress-bar__fill\" :style=\"{ width: progressWidth }\"></div>\r\n\t\t<div v-if=\"isShowTotal\" class=\"progress-bar__text\">\r\n\t\t\t{{ index + 1 }} / {{ total }}\r\n\t\t</div>\r\n\t</div>\r\n</template>\r\n\r\n<style scoped>\r\n.progress-bar {\r\n\twidth: 100%;\r\n\theight: 3vw;\r\n\tbackground-color: #e0e0e0;\r\n\tborder-radius: 10px;\r\n\toverflow: hidden;\r\n\tposition: relative;\r\n}\r\n\r\n.progress-bar__fill {\r\n\theight: 100%;\r\n\tbackground-color: #42b983; /* Цвет заполнения */\r\n\tborder-radius: 10px;\r\n\ttransition: width 0.3s ease; /* Плавное изменение ширины */\r\n}\r\n\r\n.progress-bar__text {\r\n\tposition: absolute;\r\n\ttop: 50%;\r\n\tleft: 50%;\r\n\ttransform: translate(-50%, -50%);\r\n\tfont-size: 0.9em;\r\n\tcolor: #333;\r\n\tfont-weight: bold;\r\n}\r\n</style>\r\n","<script setup>\r\nimport Answer from '../UI/Answer.vue'\r\nimport Button from '../UI/Button.vue'\r\nimport Result from '../Result.vue'\r\nimport ProgressBar from '../UI/ProgressBar.vue'\r\n\r\nimport { ref, watch, computed, onMounted } from 'vue'\r\nimport { store } from '@/store/store.js'\r\n\r\nconst examData = ref([])\r\nconst isConfirm = ref(false)\r\nconst StartDate = ref(null)\r\nconst isShowResult = ref(false)\r\nconst EndDate = computed(() => {\r\n\tif (isShowResult) return new Date()\r\n\telse return null\r\n})\r\n\r\n// Функция для перемешивания массива\r\nconst shuffleArray = array => {\r\n\tfor (let i = array.length - 1; i > 0; i--) {\r\n\t\tconst j = Math.floor(Math.random() * (i + 1))\r\n\t\t;[array[i], array[j]] = [array[j], array[i]]\r\n\t}\r\n}\r\n\r\n// Функция для получения случайных вопросов\r\nconst getRandomQuestion = totalCount => {\r\n\tconst randomQuestions = new Set()\r\n\tconst availableQuestions = store.data.slice() // Получаем вопросы из store.data\r\n\tconst themes = Array.from(\r\n\t\tnew Set(availableQuestions.map(question => question.theme))\r\n\t) // Получаем уникальные темы\r\n\r\n\tif (totalCount > availableQuestions.length) {\r\n\t\ttotalCount = availableQuestions.length\r\n\t}\r\n\r\n\twhile (randomQuestions.size < totalCount && themes.length > 0) {\r\n\t\tconst randomThemeIndex = Math.floor(Math.random() * themes.length)\r\n\t\tconst randomTheme = themes[randomThemeIndex]\r\n\r\n\t\tconst themeQuestions = availableQuestions.filter(\r\n\t\t\tquestion => question.theme === randomTheme\r\n\t\t)\r\n\r\n\t\tif (themeQuestions.length > 0) {\r\n\t\t\tconst randomQuestionIndex = Math.floor(\r\n\t\t\t\tMath.random() * themeQuestions.length\r\n\t\t\t)\r\n\t\t\tconst randomQuestion = themeQuestions.splice(randomQuestionIndex, 1)[0]\r\n\t\t\trandomQuestions.add(randomQuestion)\r\n\r\n\t\t\tif (themeQuestions.length === 0) {\r\n\t\t\t\t// Удаляем тему, если вопросы в ней закончились\r\n\t\t\t\tthemes.splice(randomThemeIndex, 1)\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (themes.length === 0 && randomQuestions.size < totalCount) {\r\n\t\t\t// Если темы закончились, но нужно больше вопросов, добавляем оставшиеся\r\n\t\t\tconst remainingQuestions = availableQuestions.filter(\r\n\t\t\t\tquestion => !randomQuestions.has(question)\r\n\t\t\t)\r\n\t\t\tconst additionalQuestions = Array.from(remainingQuestions).slice(\r\n\t\t\t\t0,\r\n\t\t\t\ttotalCount - randomQuestions.size\r\n\t\t\t)\r\n\t\t\tadditionalQuestions.forEach(question => randomQuestions.add(question))\r\n\t\t}\r\n\t}\r\n\r\n\tconst randomQuestionsArray = Array.from(randomQuestions)\r\n\r\n\t// Дополнительно перемешиваем вопросы\r\n\tshuffleArray(randomQuestionsArray)\r\n\treturn randomQuestionsArray\r\n}\r\n\r\n// Отслеживаем изменения в store.data\r\nwatch(\r\n\t() => store.data,\r\n\tnewData => {\r\n\t\tif (newData.length > 0) {\r\n\t\t\texamData.value = getRandomQuestion(10) // Получаем 10 случайных вопросов\r\n\t\t}\r\n\t},\r\n\t{ immediate: true } // Выполняем сразу при монтировании, если данные уже загружены\r\n)\r\n\r\nconst arraysAreEqual = (arr1, arr2) => {\r\n\tif (arr1.length !== arr2.length) return false // Если длины разные, массивы не равны\r\n\tconst sortedArr1 = arr1.slice().sort() // Создаем копию и сортируем\r\n\tconst sortedArr2 = arr2.slice().sort() // Создаем копию и сортируем\r\n\treturn sortedArr1.every((value, index) => value === sortedArr2[index])\r\n}\r\n\r\nconst index = ref(0)\r\nconst userIsAnswer = ref(false)\r\n\r\nconst handleUserSelect = async e => {\r\n\tlet isCorrect = false\r\n\tisConfirm.value = false\r\n\r\n\t// Проверка, является ли ответ правильным\r\n\tif (!Array.isArray(e)) {\r\n\t\tisCorrect = e === examData.value[index.value].correctAnswer[0]\r\n\t}\r\n\tif (Array.isArray(e)) {\r\n\t\tisCorrect = arraysAreEqual(e, examData.value[index.value].correctAnswer)\r\n\t}\r\n\texamData.value[index.value].isCorrect = isCorrect\r\n\r\n\t// Преобразуем данные в простой объект\r\n\tconst plainUpdates = JSON.parse(\r\n\t\tJSON.stringify({\r\n\t\t\tisCorrect: isCorrect,\r\n\t\t\tuserAlreadyAnswer: true,\r\n\t\t})\r\n\t)\r\n\r\n\t// Обновление вопроса в хранилище\r\n\tawait store.updateQuestion(examData.value[index.value].id, plainUpdates)\r\n\r\n\tuserIsAnswer.value = true\r\n}\r\n\r\nconst checkUserAnswer = () => {\r\n\tisConfirm.value = true\r\n}\r\n\r\nconst nextQuestion = () => {\r\n\tuserIsAnswer.value = false\r\n\tisShowChangeBtn.value = false\r\n\tif (index.value < examData.value.length - 1) {\r\n\t\tindex.value += 1\r\n\t}\r\n}\r\n\r\nconst isShowChangeBtn = ref(false)\r\n\r\nonMounted(() => {\r\n\tStartDate.value = new Date()\r\n})\r\n\r\nconst showResult = () => {\r\n\tisShowResult.value = true\r\n}\r\n</script>\r\n\r\n<template>\r\n\t<Transition mode=\"out-in\">\r\n\t\t<div v-if=\"!isShowResult\">\r\n\t\t\t<div v-if=\"examData.length > 0\" class=\"container\">\r\n\t\t\t\t<div class=\"container__progress-bar\">\r\n\t\t\t\t\t<ProgressBar\r\n\t\t\t\t\t\t:index=\"index\"\r\n\t\t\t\t\t\t:total=\"examData.length\"\r\n\t\t\t\t\t\t:isShowTotal=\"true\"\r\n\t\t\t\t\t></ProgressBar>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<Transition name=\"slide\" mode=\"out-in\">\r\n\t\t\t\t\t<div :key=\"index\" class=\"container__exam\">\r\n\t\t\t\t\t\t<h3>id: {{ examData[index].id }} {{ examData[index].question }}</h3>\r\n\t\t\t\t\t\t<div class=\"container__exam-answers\">\r\n\t\t\t\t\t\t\t<Answer\r\n\t\t\t\t\t\t\t\t@change=\"isShowChangeBtn = true\"\r\n\t\t\t\t\t\t\t\t:answerArr=\"examData[index].answers\"\r\n\t\t\t\t\t\t\t\t:isRadio=\"examData[index].correctAnswer.length === 1\"\r\n\t\t\t\t\t\t\t\t:isConfirm=\"isConfirm\"\r\n\t\t\t\t\t\t\t\t@userSelect=\"handleUserSelect\"\r\n\t\t\t\t\t\t\t></Answer>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div v-if=\"isShowChangeBtn\" class=\"navigation-buttons\">\r\n\t\t\t\t\t\t\t<Transition mode=\"out-in\">\r\n\t\t\t\t\t\t\t\t<Button v-if=\"!userIsAnswer\" @click=\"checkUserAnswer\">\r\n\t\t\t\t\t\t\t\t\tПодтвердить выбор\r\n\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\tv-else-if=\"index !== examData.length - 1\"\r\n\t\t\t\t\t\t\t\t\t@click=\"nextQuestion\"\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\tСледующий вопрос\r\n\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t<Button @click=\"showResult\" v-else>Результат</Button>\r\n\t\t\t\t\t\t\t</Transition>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</Transition>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t\t<div v-else>\r\n\t\t\t<Result\r\n\t\t\t\t:goodCount=\"examData.filter(item => item.isCorrect).length\"\r\n\t\t\t\t:failCount=\"examData.filter(item => !item.isCorrect).length\"\r\n\t\t\t\t:isExam=\"true\"\r\n\t\t\t></Result>\r\n\t\t</div>\r\n\t</Transition>\r\n</template>\r\n\r\n<style scoped>\r\n.container {\r\n\tpadding: 2.5vw;\r\n\tmargin: 0 auto;\r\n}\r\n\r\n.container__progress-bar {\r\n\tmargin-bottom: 2vw;\r\n}\r\n\r\n.container__exam {\r\n\tpadding: 20px;\r\n\tbackground-color: #f9f9f9;\r\n\tborder-radius: 8px;\r\n\tbox-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\r\n}\r\n\r\n.navigation-buttons {\r\n\tdisplay: flex;\r\n\tjustify-content: center;\r\n\tmargin-top: 20px;\r\n}\r\n\r\n.v-enter-active,\r\n.v-leave-active {\r\n\ttransition: opacity 0.5s ease;\r\n}\r\n\r\n.v-enter-from,\r\n.v-leave-to {\r\n\topacity: 0;\r\n}\r\n\r\n.slide-enter-active,\r\n.slide-leave-active {\r\n\ttransition: opacity 0.35s ease, transform 0.35s ease;\r\n}\r\n\r\n.slide-enter-from {\r\n\topacity: 0;\r\n\ttransform: translateX(100%);\r\n}\r\n\r\n.slide-leave-to {\r\n\topacity: 0;\r\n\ttransform: translateX(-100%);\r\n}\r\n</style>\r\n","<script setup>\r\nimport { store } from '@/store/store.js'\r\nimport { ref, onBeforeMount } from 'vue'\r\n\r\nimport ProgressBar from '../UI/ProgressBar.vue'\r\nimport Answer from '../UI/Answer.vue'\r\nimport Button from '../UI/Button.vue'\r\nimport Result from '../Result.vue'\r\n\r\nconst questionData = ref(null)\r\nconst index = ref(0)\r\nconst goodCount = ref(0)\r\nconst failCount = ref(0)\r\nconst isConfirm = ref(false)\r\nconst userAnswers = ref([])\r\nconst isEnd = ref(false)\r\n\r\nonBeforeMount(() => {\r\n\tquestionData.value = store.data\r\n\tquestionData.value = shuffleArray(questionData.value)\r\n})\r\n\r\nfunction shuffleArray(array) {\r\n\treturn array.sort(() => Math.random() - 0.5)\r\n}\r\n\r\nconst handleUserChange = e => {\r\n\tif (questionData.value[index.value].correctAnswer.length > 1) {\r\n\t\tconst checkbox = e.target\r\n\t\tconst value = checkbox.value\r\n\t\tif (checkbox.checked) {\r\n\t\t\tuserAnswers.value.push(value)\r\n\t\t} else {\r\n\t\t\tuserAnswers.value = userAnswers.value.filter(item => item !== value)\r\n\t\t}\r\n\t\treturn\r\n\t}\r\n\tisConfirm.value = true\r\n}\r\n\r\nconst handleUserSelect = e => {\r\n\tisConfirm.value = false\r\n\tcheckUserAnswer(e)\r\n\tincrementIndex()\r\n}\r\n\r\nconst checkUserAnswer = answer => {\r\n\tconst isCorrect = questionData.value[index.value].correctAnswer[0] === answer\r\n\tif (isCorrect) goodCount.value += 1\r\n\telse failCount.value += 1\r\n\tsaveUserAnswer(isCorrect)\r\n}\r\n\r\nconst checkUserAnswers = () => {\r\n\tconst isCorrect = arraysAreEqual(\r\n\t\tquestionData.value[index.value].correctAnswer,\r\n\t\tuserAnswers.value\r\n\t)\r\n\tif (isCorrect) goodCount.value += 1\r\n\telse failCount.value += 1\r\n\tsaveUserAnswer(isCorrect)\r\n\tincrementIndex()\r\n}\r\n\r\nconst arraysAreEqual = (arr1, arr2) => {\r\n\tif (arr1.length !== arr2.length) return false // Если длины разные, массивы не равны\r\n\tconst sortedArr1 = arr1.slice().sort() // Создаем копию и сортируем\r\n\tconst sortedArr2 = arr2.slice().sort() // Создаем копию и сортируем\r\n\treturn sortedArr1.every((value, index) => value === sortedArr2[index])\r\n}\r\n\r\nconst incrementIndex = () => {\r\n\tif (index.value < questionData.value.length - 1) {\r\n\t\tsetTimeout(() => {\r\n\t\t\tindex.value += 1\r\n\t\t\tuserAnswers.value = []\r\n\t\t}, 500)\r\n\t} else {\r\n\t\tisEnd.value = true\r\n\t}\r\n}\r\n\r\nconst saveUserAnswer = async isCorrect => {\r\n\tconst id = questionData.value[index.value].id\r\n\tconst plainUpdates = JSON.parse(\r\n\t\tJSON.stringify({\r\n\t\t\tisCorrect: isCorrect,\r\n\t\t\tuserAlreadyAnswer: true,\r\n\t\t})\r\n\t)\r\n\tawait store.updateQuestion(id, plainUpdates)\r\n}\r\n</script>\r\n\r\n<template>\r\n\t<Transition mode=\"out-in\">\r\n\t\t<div v-if=\"(failCount === 0) & !isEnd\" class=\"container\">\r\n\t\t\t<div class=\"container__progress-bar\">\r\n\t\t\t\t<ProgressBar :index=\"index\" :total=\"questionData.length\"></ProgressBar>\r\n\t\t\t</div>\r\n\r\n\t\t\t<Transition name=\"slide\" mode=\"out-in\">\r\n\t\t\t\t<div :key=\"index\" class=\"container__exam\">\r\n\t\t\t\t\t<div class=\"container__question\">\r\n\t\t\t\t\t\t<h3>{{ questionData[index].question }}</h3>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div class=\"container__exam-answers\">\r\n\t\t\t\t\t\t<Answer\r\n\t\t\t\t\t\t\t:answerArr=\"questionData[index].answers\"\r\n\t\t\t\t\t\t\t:isRadio=\"questionData[index].correctAnswer.length === 1\"\r\n\t\t\t\t\t\t\t@change=\"handleUserChange\"\r\n\t\t\t\t\t\t\t@userSelect=\"handleUserSelect\"\r\n\t\t\t\t\t\t\t:isConfirm=\"isConfirm\"\r\n\t\t\t\t\t\t></Answer>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div\r\n\t\t\t\t\t\tv-if=\"questionData[index].correctAnswer.length > 1\"\r\n\t\t\t\t\t\tclass=\"container__btn\"\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<Button @click=\"checkUserAnswers\">Подтвердить</Button>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</Transition>\r\n\t\t</div>\r\n\t\t<div v-else class=\"container__result\">\r\n\t\t\t<Result\r\n\t\t\t\t:isMarathon=\"true\"\r\n\t\t\t\t:failCount=\"failCount\"\r\n\t\t\t\t:goodCount=\"goodCount\"\r\n\t\t\t></Result>\r\n\t\t</div>\r\n\t</Transition>\r\n</template>\r\n\r\n<style scoped>\r\n.container {\r\n\tpadding: 2.5vw;\r\n\tmargin: 0 auto;\r\n}\r\n\r\n.container__progress-bar {\r\n\tmargin-bottom: 2vw;\r\n}\r\n\r\n.container__exam {\r\n\tpadding: 20px;\r\n\tbackground-color: #f9f9f9;\r\n\tborder-radius: 8px;\r\n\tbox-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\r\n}\r\n\r\n.v-enter-active,\r\n.v-leave-active {\r\n\ttransition: opacity 0.5s ease;\r\n}\r\n\r\n.v-enter-from,\r\n.v-leave-to {\r\n\topacity: 0;\r\n}\r\n\r\n.slide-enter-active,\r\n.slide-leave-active {\r\n\ttransition: opacity 0.35s ease, transform 0.35s ease;\r\n}\r\n\r\n.slide-enter-from {\r\n\topacity: 0;\r\n\ttransform: translateX(100%);\r\n}\r\n\r\n.slide-leave-to {\r\n\topacity: 0;\r\n\ttransform: translateX(-100%);\r\n}\r\n\r\n.container__btn {\r\n\tmargin-top: 2vw;\r\n\tdisplay: flex;\r\n\tjustify-content: center;\r\n}\r\n</style>\r\n","<script setup>\r\nimport { store } from '@/store/store.js'\r\nimport { ref, onBeforeMount } from 'vue'\r\nimport ButtonMenu from '../UI/ButtonMenu.vue'\r\nimport ConfirmDialog from '../UI/ConfirmDialog.vue'\r\n\r\nconst userAnswerCount = ref(0)\r\nconst totalQuestion = ref(0)\r\nconst failCount = ref(0)\r\nconst goodCount = ref(0)\r\nconst theme = ref('')\r\n\r\nfunction calculateStats() {\r\n\tconst data = store.data\r\n\ttotalQuestion.value = data.length\r\n\tuserAnswerCount.value = data.filter(\r\n\t\titem => item.userAlreadyAnswer === true\r\n\t).length\r\n\tfailCount.value = data.filter(\r\n\t\titem => item.userAlreadyAnswer === true && item.isCorrect === false\r\n\t).length\r\n\tgoodCount.value = data.filter(\r\n\t\titem => item.userAlreadyAnswer === true && item.isCorrect === true\r\n\t).length\r\n\r\n\t// Группируем данные по темам и подсчитываем ошибки\r\n\tconst themeStats = data.reduce((acc, item) => {\r\n\t\tif (item.userAlreadyAnswer) {\r\n\t\t\tif (!acc[item.theme]) {\r\n\t\t\t\tacc[item.theme] = { total: 0, fail: 0 }\r\n\t\t\t}\r\n\t\t\tacc[item.theme].total++\r\n\t\t\tif (!item.isCorrect) {\r\n\t\t\t\tacc[item.theme].fail++\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn acc\r\n\t}, {})\r\n\r\n\t// Находим тему с наибольшим процентом ошибок\r\n\tlet weakestTheme = ''\r\n\tlet maxFailRate = 0\r\n\tfor (const [key, value] of Object.entries(themeStats)) {\r\n\t\tconst failRate = value.fail / value.total\r\n\t\tif (failRate > maxFailRate) {\r\n\t\t\tmaxFailRate = failRate\r\n\t\t\tweakestTheme = key\r\n\t\t}\r\n\t}\r\n\r\n\ttheme.value = weakestTheme\r\n}\r\n\r\nonBeforeMount(() => {\r\n\tcalculateStats()\r\n})\r\n\r\nconst dialogVisible = ref(false)\r\n\r\nfunction showConfirmDialog() {\r\n\tdialogVisible.value = true\r\n}\r\n\r\nasync function onConfirm() {\r\n\tdialogVisible.value = false\r\n\tawait store.reloadAndReplaceData()\r\n\tcalculateStats() // Пересчет статистики после обновления данных\r\n}\r\n\r\nfunction onCancel() {\r\n\tdialogVisible.value = false\r\n}\r\n</script>\r\n\r\n<template>\r\n\t<div class=\"container\">\r\n\t\t<div class=\"container__head\">\r\n\t\t\t<h2>Статистика</h2>\r\n\t\t</div>\r\n\r\n\t\t<div class=\"container__info\">\r\n\t\t\tВы ответили на: {{ userAnswerCount }} из {{ totalQuestion }} вопросов\r\n\t\t</div>\r\n\t\t<div class=\"container__info good\">Правильных ответов: {{ goodCount }}</div>\r\n\t\t<div class=\"container__info fail\">\r\n\t\t\tНеправильный ответов: {{ failCount }}\r\n\t\t</div>\r\n\t\t<div class=\"container__info theme\">\r\n\t\t\tВаша самая слабая тема: <br />\r\n\t\t\t{{ theme }}\r\n\t\t</div>\r\n\t\t<div class=\"container__btns\">\r\n\t\t\t<RouterLink to=\"/\">\r\n\t\t\t\t<ButtonMenu width=\"30vw\"> Вернуться в меню </ButtonMenu>\r\n\t\t\t</RouterLink>\r\n\t\t\t<ButtonMenu @click=\"dialogVisible = true\" width=\"27vw\" font-size=\"0.8em\">\r\n\t\t\t\tСбросить статистику\r\n\t\t\t</ButtonMenu>\r\n\t\t</div>\r\n\t</div>\r\n\t<ConfirmDialog\r\n\t\t:isVisible=\"dialogVisible\"\r\n\t\ttitle=\"Вы уверены?\"\r\n\t\tmessage=\"Это приведет к потери прогресса\"\r\n\t\t@confirm=\"onConfirm\"\r\n\t\t@cancel=\"onCancel\"\r\n\t/>\r\n</template>\r\n\r\n<style scoped>\r\n.container {\r\n\tbackground-image: url('@/assets/img/img_2.png');\r\n\tbackground-size: cover;\r\n\tmin-height: 50vw;\r\n\tdisplay: flex;\r\n\tflex-direction: column;\r\n\talign-items: center;\r\n\tjustify-content: center;\r\n}\r\n\r\n.container__head h2 {\r\n\tfont-size: 2.6em;\r\n\tfont-weight: 900;\r\n\tmargin-bottom: 2vw;\r\n}\r\n\r\n.container__info {\r\n\tmargin: 0.2vw 0;\r\n\tfont-size: 1.3em;\r\n\tfont-weight: 900;\r\n}\r\n\r\n.good {\r\n\tcolor: #42b983;\r\n}\r\n\r\n.fail {\r\n\tcolor: red;\r\n}\r\n\r\n.theme {\r\n\tcolor: #00277d;\r\n\ttext-align: center;\r\n}\r\n\r\n.container__btns {\r\n\tmargin: 1.2vw;\r\n\tdisplay: flex;\r\n\tflex-direction: column;\r\n\tjustify-content: center;\r\n\talign-items: center;\r\n\tgap: 2vw;\r\n}\r\n</style>\r\n","<script setup></script>\r\n\r\n<template>\r\n\t<button><slot></slot></button>\r\n</template>\r\n\r\n<style scoped>\r\nbutton {\r\n\tpadding: 0.3vw 5vw;\r\n\tbackground-color: transparent;\r\n\tborder: 2px solid #2196f3;\r\n\tfont-size: 0.85em;\r\n\tcolor: #2196f3;\r\n\tcursor: pointer;\r\n}\r\n</style>\r\n","<script setup>\r\nimport { store } from '@/store/store.js'\r\nimport { ref, onBeforeMount } from 'vue'\r\nimport Answer from '../UI/Answer.vue'\r\nimport Button from '../UI/Button.vue'\r\nimport Result from '../Result.vue'\r\nimport ProgressBar from '../UI/ProgressBar.vue'\r\nimport ButtonHit from '../UI/ButtonHit.vue'\r\nimport Hit from '../UI/Hit.vue'\r\nimport ButtonMenu from '../UI/ButtonMenu.vue'\r\nimport { RouterLink } from 'vue-router'\r\n\r\nconst questionData = ref([])\r\nconst isConfirm = ref(false)\r\nconst isShowResult = ref(false)\r\nconst isGoodAnswer = ref(null)\r\nconst showHitBtn = ref(false)\r\nconst showHit = ref(false)\r\n\r\nonBeforeMount(() => {\r\n\tquestionData.value = store.data.filter(\r\n\t\titem => item.isCorrect === false && item.userAlreadyAnswer === true\r\n\t)\r\n})\r\n\r\nconst arraysAreEqual = (arr1, arr2) => {\r\n\tif (arr1.length !== arr2.length) return false // Если длины разные, массивы не равны\r\n\tconst sortedArr1 = arr1.slice().sort() // Создаем копию и сортируем\r\n\tconst sortedArr2 = arr2.slice().sort() // Создаем копию и сортируем\r\n\treturn sortedArr1.every((value, index) => value === sortedArr2[index])\r\n}\r\n\r\nconst index = ref(0)\r\nconst userIsAnswer = ref(false)\r\n\r\nconst handleUserSelect = async e => {\r\n\tlet isCorrect = false\r\n\tisConfirm.value = false\r\n\r\n\t// Проверка, является ли ответ правильным\r\n\tif (!Array.isArray(e)) {\r\n\t\tisCorrect = e === questionData.value[index.value].correctAnswer[0]\r\n\t}\r\n\tif (Array.isArray(e)) {\r\n\t\tisCorrect = arraysAreEqual(e, questionData.value[index.value].correctAnswer)\r\n\t}\r\n\tquestionData.value[index.value].isCorrect = isCorrect\r\n\r\n\t// Преобразуем данные в простой объект\r\n\tconst plainUpdates = JSON.parse(\r\n\t\tJSON.stringify({\r\n\t\t\tisCorrect: isCorrect,\r\n\t\t\tuserAlreadyAnswer: true,\r\n\t\t})\r\n\t)\r\n\r\n\t// Обновление вопроса в хранилище\r\n\tawait store.updateQuestion(questionData.value[index.value].id, plainUpdates)\r\n\r\n\tuserIsAnswer.value = true\r\n\tisGoodAnswer.value = isCorrect\r\n}\r\n\r\nconst checkUserAnswer = () => {\r\n\tshowHitBtn.value = true\r\n\tisConfirm.value = true\r\n}\r\n\r\nconst nextQuestion = () => {\r\n\tshowHitBtn.value = false\r\n\tuserIsAnswer.value = false\r\n\tisShowChangeBtn.value = false\r\n\tshowHit.value = false\r\n\tif (index.value < questionData.value.length - 1) {\r\n\t\tindex.value += 1\r\n\t}\r\n}\r\n\r\nconst isShowChangeBtn = ref(false)\r\n\r\nconst showResult = () => {\r\n\tisShowResult.value = true\r\n\tshowHit.value = false\r\n}\r\n\r\nconst handleShowHit = () => {\r\n\tif (showHit.value === false) {\r\n\t\tshowHit.value = true\r\n\t} else {\r\n\t\tshowHit.value = false\r\n\t}\r\n}\r\n</script>\r\n\r\n<template>\r\n\t<div v-if=\"questionData.length > 0\">\r\n\t\t<Transition mode=\"out-in\">\r\n\t\t\t<div v-if=\"!isShowResult\">\r\n\t\t\t\t<div v-if=\"questionData.length > 0\" class=\"container\">\r\n\t\t\t\t\t<div class=\"container__progress-bar\">\r\n\t\t\t\t\t\t<ProgressBar\r\n\t\t\t\t\t\t\t:index=\"index\"\r\n\t\t\t\t\t\t\t:total=\"questionData.length\"\r\n\t\t\t\t\t\t\t:isShowTotal=\"true\"\r\n\t\t\t\t\t\t></ProgressBar>\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t<Transition name=\"slide\" mode=\"out-in\">\r\n\t\t\t\t\t\t<div :key=\"index\" class=\"container__exam\">\r\n\t\t\t\t\t\t\t<h3>\r\n\t\t\t\t\t\t\t\t{{ questionData[index].question }}\r\n\t\t\t\t\t\t\t</h3>\r\n\t\t\t\t\t\t\t<div class=\"container__exam-answers\">\r\n\t\t\t\t\t\t\t\t<Answer\r\n\t\t\t\t\t\t\t\t\t@change=\"isShowChangeBtn = true\"\r\n\t\t\t\t\t\t\t\t\t:answerArr=\"questionData[index].answers\"\r\n\t\t\t\t\t\t\t\t\t:isRadio=\"questionData[index].correctAnswer.length === 1\"\r\n\t\t\t\t\t\t\t\t\t:isConfirm=\"isConfirm\"\r\n\t\t\t\t\t\t\t\t\t@userSelect=\"handleUserSelect\"\r\n\t\t\t\t\t\t\t\t></Answer>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div class=\"container__hit\" v-if=\"showHitBtn\">\r\n\t\t\t\t\t\t\t\t<div class=\"container__hit-msg\">\r\n\t\t\t\t\t\t\t\t\t<p class=\"good\" v-if=\"isGoodAnswer\">Вы ответили правильно</p>\r\n\t\t\t\t\t\t\t\t\t<p class=\"fail\" v-else>Вы ошиблись</p>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t<ButtonHit @click=\"handleShowHit\"\r\n\t\t\t\t\t\t\t\t\t\t>Показать подсказку</ButtonHit\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div v-if=\"isShowChangeBtn\" class=\"navigation-buttons\">\r\n\t\t\t\t\t\t\t\t<Transition mode=\"out-in\">\r\n\t\t\t\t\t\t\t\t\t<Button v-if=\"!userIsAnswer\" @click=\"checkUserAnswer\">\r\n\t\t\t\t\t\t\t\t\t\tПодтвердить выбор\r\n\t\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\t\tclass=\"btns_next_menu\"\r\n\t\t\t\t\t\t\t\t\t\tv-else-if=\"index !== questionData.length - 1\"\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t<Button @click=\"isShowResult = true\"> Закончить </Button>\r\n\t\t\t\t\t\t\t\t\t\t<Button @click=\"nextQuestion\"> Следующий вопрос </Button>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t\t<Button @click=\"showResult\" v-else>Результат</Button>\r\n\t\t\t\t\t\t\t\t</Transition>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div class=\"container__hit\">\r\n\t\t\t\t\t\t\t\t<Hit :hit=\"questionData[index].hit\" :showHit=\"showHit\"></Hit>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</Transition>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\r\n\t\t\t<div v-else>\r\n\t\t\t\t<Result\r\n\t\t\t\t\t:goodCount=\"questionData.filter(item => item.isCorrect).length\"\r\n\t\t\t\t\t:failCount=\"questionData.filter(item => !item.isCorrect).length\"\r\n\t\t\t\t></Result>\r\n\t\t\t</div>\r\n\t\t</Transition>\r\n\t</div>\r\n\t<div v-else>\r\n\t\t<div class=\"container__empty\">\r\n\t\t\t<h2>Здесь будут отображаться вопросы в которых вы ошиблись</h2>\r\n\t\t\t<h3>Пока у вас нет ошибок</h3>\r\n\t\t\t<RouterLink to=\"/\"\r\n\t\t\t\t><ButtonMenu>Вернуться в главное меню</ButtonMenu></RouterLink\r\n\t\t\t>\r\n\t\t</div>\r\n\t</div>\r\n</template>\r\n\r\n<style scoped>\r\n.container {\r\n\tpadding: 2.5vw;\r\n\tmargin: 0 auto;\r\n}\r\n\r\n.container__progress-bar {\r\n\tmargin-bottom: 2vw;\r\n}\r\n\r\n.container__exam {\r\n\tpadding: 20px;\r\n\tbackground-color: #f9f9f9;\r\n\tborder-radius: 8px;\r\n\tbox-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\r\n}\r\n\r\n.navigation-buttons {\r\n\tdisplay: flex;\r\n\tjustify-content: center;\r\n\tmargin-top: 20px;\r\n}\r\n\r\n.btns_next_menu {\r\n\tdisplay: flex;\r\n\tjustify-content: space-between;\r\n\twidth: 100%;\r\n}\r\n\r\n.container__hit {\r\n\tdisplay: flex;\r\n\tflex-direction: column;\r\n\talign-items: center;\r\n\tgap: 2vw;\r\n}\r\n\r\n.container__hit-msg {\r\n\tdisplay: flex;\r\n\tjustify-content: center;\r\n}\r\n\r\n.container__hit-msg p {\r\n\tpadding: 0.3vw 4vw;\r\n\twidth: 85vw;\r\n\ttext-align: center;\r\n\tfont-weight: 700;\r\n\tfont-size: 1em;\r\n\tborder-radius: 0.4vw;\r\n}\r\n\r\n.container__hit-msg .good {\r\n\tbackground-color: #e9f5ea;\r\n\tborder: 2px solid #42b983;\r\n\tcolor: #42b983;\r\n}\r\n\r\n.container__hit-msg .fail {\r\n\tbackground-color: #fee6e3;\r\n\tborder: 2px solid red;\r\n\tcolor: red;\r\n}\r\n\r\n.container__empty {\r\n\tdisplay: flex;\r\n\tflex-direction: column;\r\n\talign-items: center;\r\n\tgap: 2vw;\r\n}\r\n\r\n.container__empty h2,\r\nh3 {\r\n\ttext-align: center;\r\n}\r\n\r\n.container__empty h2 {\r\n\tfont-size: 1.4em;\r\n}\r\n\r\n.container__empty h3 {\r\n\tfont-size: 1.3em;\r\n}\r\n\r\n.v-enter-active,\r\n.v-leave-active {\r\n\ttransition: opacity 0.5s ease;\r\n}\r\n\r\n.v-enter-from,\r\n.v-leave-to {\r\n\topacity: 0;\r\n}\r\n\r\n.slide-enter-active,\r\n.slide-leave-active {\r\n\ttransition: opacity 0.35s ease, transform 0.35s ease;\r\n}\r\n\r\n.slide-enter-from {\r\n\topacity: 0;\r\n\ttransform: translateX(100%);\r\n}\r\n\r\n.slide-leave-to {\r\n\topacity: 0;\r\n\ttransform: translateX(-100%);\r\n}\r\n</style>\r\n","<script setup>\r\nimport ButtonMenu from '../UI/ButtonMenu.vue'\r\n\r\nconst props = defineProps({\r\n\ttheme: {\r\n\t\ttype: Object,\r\n\t\trequired: true,\r\n\t},\r\n})\r\n\r\nconst emit = defineEmits(['chooseTheme'])\r\n\r\nconst handleClick = () => {\r\n\temit('chooseTheme', props.theme.name)\r\n}\r\n</script>\r\n\r\n<template>\r\n\t<div class=\"container\">\r\n\t\t<div class=\"theme_name\">\r\n\t\t\t{{ theme.name }}\r\n\t\t</div>\r\n\r\n\t\t<div class=\"theme_counts\">\r\n\t\t\t<hr />\r\n\t\t\t<div class=\"theme_total\">\r\n\t\t\t\tКоличество вопросов: {{ theme.questionTotal }}\r\n\t\t\t</div>\r\n\r\n\t\t\t<div class=\"theme_good\">\r\n\t\t\t\tКоличество правильных ответов : {{ theme.questionGood }}\r\n\t\t\t</div>\r\n\r\n\t\t\t<div class=\"theme_fail\">Количество ошибок: {{ theme.questionFail }}</div>\r\n\t\t</div>\r\n\r\n\t\t<div class=\"theme_btn\">\r\n\t\t\t<ButtonMenu @click=\"handleClick\">Тренироваться</ButtonMenu>\r\n\t\t</div>\r\n\t</div>\r\n</template>\r\n\r\n<style scoped>\r\n.container {\r\n\tbox-shadow: 0.5vw 0.8vw 1vw 0.1vw rgb(122, 122, 122);\r\n\tborder-radius: 1vw;\r\n\tdisplay: flex;\r\n\tflex-direction: column;\r\n\tgap: 1.5vw;\r\n\tborder: 1px solid rgba(122, 122, 122, 0.286);\r\n\theight: 100%;\r\n\tpadding: 1.5vw;\r\n\ttransition: scale 0.3s, box-shadow 0.5s;\r\n}\r\n\r\n.theme_name {\r\n\ttext-align: center;\r\n\tfont-size: 1.2em;\r\n\tfont-weight: 900;\r\n\tdisplay: flex;\r\n\tflex-flow: column;\r\n\tjustify-content: center;\r\n\talign-items: center;\r\n\theight: 100%;\r\n}\r\n\r\n.theme_counts {\r\n\tmargin-top: auto;\r\n\tdisplay: flex;\r\n\tflex-direction: column;\r\n\tgap: 0.5vw;\r\n}\r\n\r\n.theme_btn {\r\n\tmargin-top: 0;\r\n}\r\n\r\n.theme_good {\r\n\tcolor: #4caf50;\r\n}\r\n\r\n.theme_fail {\r\n\tcolor: red;\r\n}\r\n\r\n.container:hover {\r\n\tbox-shadow: 0.5vw 0.8vw 1vw 0.1vw rgba(122, 122, 122, 0.128);\r\n\tscale: 1.02;\r\n}\r\n</style>\r\n","<script setup>\r\nimport { store } from '../../store/store.js'\r\nimport { ref, onBeforeMount } from 'vue'\r\nimport { RouterLink, useRouter } from 'vue-router'\r\nimport ThemeCard from '../UI/ThemeCard.vue'\r\nimport ButtonMenu from '../UI/ButtonMenu.vue'\r\n\r\nconst router = useRouter()\r\nconst themeArr = ref([])\r\n\r\nonBeforeMount(() => {\r\n\tconst themes = [...new Set(store.data.map(question => question.theme))]\r\n\r\n\tthemes.forEach(el => {\r\n\t\tthemeArr.value.push({\r\n\t\t\tname: el,\r\n\t\t\tquestionTotal: store.data.filter(item => item.theme === el).length,\r\n\t\t\tquestionGood: store.data.filter(\r\n\t\t\t\titem =>\r\n\t\t\t\t\titem.theme === el &&\r\n\t\t\t\t\titem.userAlreadyAnswer === true &&\r\n\t\t\t\t\titem.isCorrect === true\r\n\t\t\t).length,\r\n\t\t\tquestionFail: store.data.filter(\r\n\t\t\t\titem =>\r\n\t\t\t\t\titem.theme === el &&\r\n\t\t\t\t\titem.userAlreadyAnswer === true &&\r\n\t\t\t\t\titem.isCorrect === false\r\n\t\t\t).length,\r\n\t\t})\r\n\t})\r\n})\r\n\r\nconst handleChooseTheme = e => {\r\n\trouter.push(`/theme/${encodeURIComponent(e)}`)\r\n}\r\n</script>\r\n\r\n<template>\r\n\t<div class=\"container\">\r\n\t\t<div class=\"container__card\">\r\n\t\t\t<div\r\n\t\t\t\tv-for=\"(item, index) in themeArr\"\r\n\t\t\t\t:key=\"index\"\r\n\t\t\t\t:class=\"{\r\n\t\t\t\t\t'last-item':\r\n\t\t\t\t\t\tindex === themeArr.length - 1 && themeArr.length % 2 !== 0,\r\n\t\t\t\t}\"\r\n\t\t\t>\r\n\t\t\t\t<ThemeCard :theme=\"item\" @chooseTheme=\"handleChooseTheme\"></ThemeCard>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\r\n\t\t<div class=\"container__btn\">\r\n\t\t\t<RouterLink to=\"/\">\r\n\t\t\t\t<ButtonMenu>Вернуться в меню</ButtonMenu>\r\n\t\t\t</RouterLink>\r\n\t\t</div>\r\n\t</div>\r\n</template>\r\n\r\n<style scoped>\r\n.container {\r\n\tmargin: 0.5vw 0.8vw 2vw 0.4vw;\r\n}\r\n\r\n.container__card {\r\n\tdisplay: grid;\r\n\tgrid-template-columns: repeat(2, 1fr);\r\n\tgap: 1.5vw 0.7vw;\r\n}\r\n\r\n.last-item {\r\n\tmargin-top: 1vw;\r\n\tgrid-column: span 2;\r\n\tjustify-self: center;\r\n\tmax-width: 50%;\r\n}\r\n\r\n.container__btn {\r\n\tmargin-top: 3vw;\r\n\tdisplay: flex;\r\n\tjustify-content: center;\r\n}\r\n</style>\r\n","<script setup>\r\nimport { ref, onBeforeMount } from 'vue'\r\nimport { store } from '@/store/store.js'\r\nimport { useRoute } from 'vue-router'\r\n\r\nimport Answer from '../UI/Answer.vue'\r\nimport Button from '../UI/Button.vue'\r\nimport Result from '../Result.vue'\r\nimport ProgressBar from '../UI/ProgressBar.vue'\r\nimport ButtonHit from '../UI/ButtonHit.vue'\r\nimport Hit from '../UI/Hit.vue'\r\nimport ButtonMenu from '../UI/ButtonMenu.vue'\r\n\r\nconst questionData = ref([])\r\nconst route = useRoute()\r\nconst isConfirm = ref(false)\r\nconst isShowResult = ref(false)\r\nconst isGoodAnswer = ref(null)\r\nconst showHitBtn = ref(false)\r\nconst showHit = ref(false)\r\nconst index = ref(0)\r\nconst userIsAnswer = ref(false)\r\nconst goodCount = ref(0)\r\nconst failCount = ref(0)\r\n\r\nonBeforeMount(() => {\r\n\tquestionData.value = store.data.filter(\r\n\t\titem => item.theme === route.params.theme\r\n\t)\r\n})\r\n\r\nconst arraysAreEqual = (arr1, arr2) => {\r\n\tif (arr1.length !== arr2.length) return false\r\n\tconst sortedArr1 = arr1.slice().sort()\r\n\tconst sortedArr2 = arr2.slice().sort()\r\n\treturn sortedArr1.every((value, index) => value === sortedArr2[index])\r\n}\r\n\r\nconst handleUserSelect = async e => {\r\n\tlet isCorrect = false\r\n\tisConfirm.value = false\r\n\r\n\t// Проверка, является ли ответ правильным\r\n\tif (!Array.isArray(e)) {\r\n\t\tisCorrect = e === questionData.value[index.value].correctAnswer[0]\r\n\t}\r\n\tif (Array.isArray(e)) {\r\n\t\tisCorrect = arraysAreEqual(e, questionData.value[index.value].correctAnswer)\r\n\t}\r\n\tquestionData.value[index.value].isCorrect = isCorrect\r\n\r\n\t// Преобразуем данные в простой объект\r\n\tconst plainUpdates = JSON.parse(\r\n\t\tJSON.stringify({\r\n\t\t\tisCorrect: isCorrect,\r\n\t\t\tuserAlreadyAnswer: true,\r\n\t\t})\r\n\t)\r\n\r\n\t// Обновление вопроса в хранилище\r\n\tawait store.updateQuestion(questionData.value[index.value].id, plainUpdates)\r\n\r\n\tuserIsAnswer.value = true\r\n\tisGoodAnswer.value = isCorrect\r\n\tif (isCorrect) goodCount.value += 1\r\n\telse failCount.value += 1\r\n}\r\n\r\nconst checkUserAnswer = () => {\r\n\tshowHitBtn.value = true\r\n\tisConfirm.value = true\r\n}\r\n\r\nconst nextQuestion = () => {\r\n\tshowHitBtn.value = false\r\n\tuserIsAnswer.value = false\r\n\tisShowChangeBtn.value = false\r\n\tshowHit.value = false\r\n\tif (index.value < questionData.value.length - 1) {\r\n\t\tindex.value += 1\r\n\t}\r\n}\r\n\r\nconst isShowChangeBtn = ref(false)\r\n\r\nconst showResult = () => {\r\n\tisShowResult.value = true\r\n\tshowHit.value = false\r\n}\r\n\r\nconst handleShowHit = () => {\r\n\tif (showHit.value === false) {\r\n\t\tshowHit.value = true\r\n\t} else {\r\n\t\tshowHit.value = false\r\n\t}\r\n}\r\n</script>\r\n\r\n<template>\r\n\t<div v-if=\"questionData.length > 0\">\r\n\t\t<Transition mode=\"out-in\">\r\n\t\t\t<div v-if=\"!isShowResult\">\r\n\t\t\t\t<div v-if=\"questionData.length > 0\" class=\"container\">\r\n\t\t\t\t\t<div class=\"container__progress-bar\">\r\n\t\t\t\t\t\t<ProgressBar\r\n\t\t\t\t\t\t\t:index=\"index\"\r\n\t\t\t\t\t\t\t:total=\"questionData.length\"\r\n\t\t\t\t\t\t\t:isShowTotal=\"true\"\r\n\t\t\t\t\t\t></ProgressBar>\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t<Transition name=\"slide\" mode=\"out-in\">\r\n\t\t\t\t\t\t<div :key=\"index\" class=\"container__exam\">\r\n\t\t\t\t\t\t\t<h3>\r\n\t\t\t\t\t\t\t\t{{ questionData[index].question }}\r\n\t\t\t\t\t\t\t</h3>\r\n\t\t\t\t\t\t\t<div class=\"container__exam-answers\">\r\n\t\t\t\t\t\t\t\t<Answer\r\n\t\t\t\t\t\t\t\t\t@change=\"isShowChangeBtn = true\"\r\n\t\t\t\t\t\t\t\t\t:answerArr=\"questionData[index].answers\"\r\n\t\t\t\t\t\t\t\t\t:isRadio=\"questionData[index].correctAnswer.length === 1\"\r\n\t\t\t\t\t\t\t\t\t:isConfirm=\"isConfirm\"\r\n\t\t\t\t\t\t\t\t\t@userSelect=\"handleUserSelect\"\r\n\t\t\t\t\t\t\t\t></Answer>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div class=\"container__hit\" v-if=\"showHitBtn\">\r\n\t\t\t\t\t\t\t\t<div class=\"container__hit-msg\">\r\n\t\t\t\t\t\t\t\t\t<p class=\"good\" v-if=\"isGoodAnswer\">Вы ответили правильно</p>\r\n\t\t\t\t\t\t\t\t\t<p class=\"fail\" v-else>Вы ошиблись</p>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t<ButtonHit @click=\"handleShowHit\"\r\n\t\t\t\t\t\t\t\t\t\t>Показать подсказку</ButtonHit\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div v-if=\"isShowChangeBtn\" class=\"navigation-buttons\">\r\n\t\t\t\t\t\t\t\t<Transition mode=\"out-in\">\r\n\t\t\t\t\t\t\t\t\t<Button v-if=\"!userIsAnswer\" @click=\"checkUserAnswer\">\r\n\t\t\t\t\t\t\t\t\t\tПодтвердить выбор\r\n\t\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\t\tclass=\"btns_next_menu\"\r\n\t\t\t\t\t\t\t\t\t\tv-else-if=\"index !== questionData.length - 1\"\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t<Button @click=\"isShowResult = true\"> Закончить </Button>\r\n\t\t\t\t\t\t\t\t\t\t<Button @click=\"nextQuestion\"> Следующий вопрос </Button>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t\t<Button @click=\"showResult\" v-else>Результат</Button>\r\n\t\t\t\t\t\t\t\t</Transition>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div class=\"container__hit\">\r\n\t\t\t\t\t\t\t\t<Hit :hit=\"questionData[index].hit\" :showHit=\"showHit\"></Hit>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</Transition>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\r\n\t\t\t<div v-else>\r\n\t\t\t\t<Result :goodCount=\"goodCount\" :failCount=\"failCount\"></Result>\r\n\t\t\t</div>\r\n\t\t</Transition>\r\n\t</div>\r\n\t<div v-else>\r\n\t\t<div class=\"container__empty\">\r\n\t\t\t<h2>Здесь будут отображаться вопросы в которых вы ошиблись</h2>\r\n\t\t\t<h3>Пока у вас нет ошибок</h3>\r\n\t\t\t<RouterLink to=\"/\"\r\n\t\t\t\t><ButtonMenu>Вернуться в главное меню</ButtonMenu></RouterLink\r\n\t\t\t>\r\n\t\t</div>\r\n\t</div>\r\n</template>\r\n\r\n<style scoped>\r\n.container {\r\n\tpadding: 2.5vw;\r\n\tmargin: 0 auto;\r\n}\r\n\r\n.container__progress-bar {\r\n\tmargin-bottom: 2vw;\r\n}\r\n\r\n.container__exam {\r\n\tpadding: 20px;\r\n\tbackground-color: #f9f9f9;\r\n\tborder-radius: 8px;\r\n\tbox-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\r\n}\r\n\r\n.navigation-buttons {\r\n\tdisplay: flex;\r\n\tjustify-content: center;\r\n\tmargin-top: 20px;\r\n}\r\n\r\n.btns_next_menu {\r\n\tdisplay: flex;\r\n\tjustify-content: space-between;\r\n\twidth: 100%;\r\n}\r\n\r\n.container__hit {\r\n\tdisplay: flex;\r\n\tflex-direction: column;\r\n\talign-items: center;\r\n\tgap: 2vw;\r\n}\r\n\r\n.container__hit-msg {\r\n\tdisplay: flex;\r\n\tjustify-content: center;\r\n}\r\n\r\n.container__hit-msg p {\r\n\tpadding: 0.3vw 4vw;\r\n\twidth: 85vw;\r\n\ttext-align: center;\r\n\tfont-weight: 700;\r\n\tfont-size: 1em;\r\n\tborder-radius: 0.4vw;\r\n}\r\n\r\n.container__hit-msg .good {\r\n\tbackground-color: #e9f5ea;\r\n\tborder: 2px solid #42b983;\r\n\tcolor: #42b983;\r\n}\r\n\r\n.container__hit-msg .fail {\r\n\tbackground-color: #fee6e3;\r\n\tborder: 2px solid red;\r\n\tcolor: red;\r\n}\r\n\r\n.container__empty {\r\n\tdisplay: flex;\r\n\tflex-direction: column;\r\n\talign-items: center;\r\n\tgap: 2vw;\r\n}\r\n\r\n.container__empty h2,\r\nh3 {\r\n\ttext-align: center;\r\n}\r\n\r\n.container__empty h2 {\r\n\tfont-size: 1.4em;\r\n}\r\n\r\n.container__empty h3 {\r\n\tfont-size: 1.3em;\r\n}\r\n\r\n.v-enter-active,\r\n.v-leave-active {\r\n\ttransition: opacity 0.5s ease;\r\n}\r\n\r\n.v-enter-from,\r\n.v-leave-to {\r\n\topacity: 0;\r\n}\r\n\r\n.slide-enter-active,\r\n.slide-leave-active {\r\n\ttransition: opacity 0.35s ease, transform 0.35s ease;\r\n}\r\n\r\n.slide-enter-from {\r\n\topacity: 0;\r\n\ttransform: translateX(100%);\r\n}\r\n\r\n.slide-leave-to {\r\n\topacity: 0;\r\n\ttransform: translateX(-100%);\r\n}\r\n</style>\r\n","import { createWebHistory, createRouter } from 'vue-router'\r\n\r\nimport Menu from '../components/Pages/MenuPage.vue'\r\nimport Exam from '../components/Pages/ExamPage.vue'\r\nimport MarathonPage from '../components/Pages/MarathonPage.vue'\r\nimport StatisticPage from '../components/Pages/StatisticPage.vue'\r\nimport MistakePage from '../components/Pages/MistakePage.vue'\r\nimport ThemePage from '../components/Pages/ThemePage.vue'\r\nimport ThemeTraining from '../components/Pages/ThemeTraining.vue'\r\n\r\nconst routes = [\r\n\t{ path: '/', component: Menu },\r\n\t{ path: '/exam', component: Exam },\r\n\t{ path: '/marathon', component: MarathonPage },\r\n\t{ path: '/statistic', component: StatisticPage },\r\n\t{ path: '/mistake', component: MistakePage },\r\n\t{ path: '/theme', component: ThemePage },\r\n\t{ path: '/theme/:theme', component: ThemeTraining },\r\n]\r\n\r\nconst router = createRouter({\r\n\thistory: createWebHistory(), // Используем createWebHistory\r\n\troutes,\r\n})\r\n\r\nexport default router\r\n","import { createApp } from 'vue'\nimport './style.css'\nimport router from './router/router'\nimport App from './App.vue'\n\ncreateApp(App).use(router).mount('#app')\n"],"names":["props","__props","isVisible","ref","tooltipStyle","showTooltip","event","triggerRect","styles","hideTooltip","IndexedDB","dbName","storeName","resolve","reject","request","db","id","data","transaction","store","item","ids","excludeFields","isCorrect","userAlreadyAnswer","rest","getFromLocalStorage","key","defaultValue","value","setToLocalStorage","reactive","startTime","response","newData","existingData","itemsToAdd","existingItem","enrichedItems","itemsToRemove","enrichedData","updates","newItem","error","executionTime","question","rawUpdates","updatedQuestion","watch","newValue","isLoading","onBeforeMount","emit","__emit","isDisable","selectedValue","selectedValues","newVal","handleRadioChange","handleCheckboxChange","isHovered","handleMouseEnter","handleMouseLeave","progressWidth","computed","examData","isConfirm","StartDate","isShowResult","shuffleArray","array","i","j","getRandomQuestion","totalCount","randomQuestions","availableQuestions","themes","randomThemeIndex","randomTheme","themeQuestions","randomQuestionIndex","randomQuestion","remainingQuestions","randomQuestionsArray","arraysAreEqual","arr1","arr2","sortedArr1","sortedArr2","index","userIsAnswer","handleUserSelect","e","plainUpdates","checkUserAnswer","nextQuestion","isShowChangeBtn","onMounted","showResult","questionData","goodCount","failCount","userAnswers","isEnd","handleUserChange","checkbox","incrementIndex","answer","saveUserAnswer","checkUserAnswers","userAnswerCount","totalQuestion","theme","calculateStats","themeStats","acc","weakestTheme","maxFailRate","failRate","dialogVisible","onConfirm","onCancel","_cache","_openBlock","_createElementBlock","isGoodAnswer","showHitBtn","showHit","handleShowHit","handleClick","router","useRouter","themeArr","el","handleChooseTheme","route","useRoute","routes","Menu","Exam","MarathonPage","StatisticPage","MistakePage","ThemePage","ThemeTraining","createRouter","createWebHistory","createApp","App"],"mappings":"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"}